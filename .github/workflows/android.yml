on: [push, pull_request]

name: Android

jobs:
  ci:
    name: Compile and Release
    runs-on: macos-latest
    steps:
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm/10.0
          key: ${{ runner.os }}-cached-llvm-10.0

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '10.0'
          directory: ${{ runner.temp }}/llvm/10.0
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        id: rust_toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust_toolchain.outputs.rustc_hash }}

      - name: Install Cargo Tools (cargo-make)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: cargo-make

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v1

      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v2
        with:
          path: /Users/runner/android/ndk-bundle
          key: ${{ runner.os }}-cached-ndk

      - name: Install Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: $ANDROID_SDK_ROOT/tools/bin/sdkmanager ndk-bundle

      - name: Set Android NDK Env
        run: echo '::set-env name=ANDROID_NDK_HOME::/Users/runner/android/ndk-bundle'

      - name: Install Android Targets
        run: rustup target add aarch64-linux-android x86_64-linux-android

      - name: Run cargo make android x86_64 (Release)
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-dev --profile release

      - name: Run cargo make android ARM64 (Release)
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-arm --profile release

      - name: Prepare Release
      - run: mv target/aarch64-linux-android/release/libkeystore.so target/release/libkeystore-aarch64-linux-android.so && mv target/x86_64-linux-android/release/libkeystore.so target/release/libkeystore-x86_64-linux-android.so

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: latest
          files: |
            target/release/libkeystore-aarch64-linux-android.so
            target/release/libkeystore-x86_64-linux-android.so
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
